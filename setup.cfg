[metadata]
name = finagg
description = A Python package for aggregating data from popular, free finance APIs.
author = Andrew B.
url = https://github.com/theOGognf/finagg
project_urls =
    Source = https://github.com/theOGognf/finagg
    Tracker = https://github.com/theOGognf/finagg/issues
long_description = file: README.md
long_description_content_type = text/markdown

[options]
package_dir =
    =src
packages = find:
install_requires =
    beautifulsoup4
    click
    pandas
    pandas-stubs
    python-dotenv
    requests
    requests-cache
    setuptools>=46.1.0
    setuptools_scm>=5
    SQLAlchemy
    tqdm
    types-requests
    typing-extensions
    yfinance
classifiers =
    Development Status :: 3 - Alpha
    Environment :: GPU
    Intended Audience :: Science/Research
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX
    Operating System :: Unix
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Office/Business :: Financial :: Investment
    Topic :: Software Development
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Typing :: Typed

[options.entry_points]
console_scripts =
    finagg = finagg.__main__:main

[options.extras_require]
dev =
    build[virtualenv]
    mypy
    pre-commit
    pytest
    pytest-cov
    pytest-shutil
    pytest-virtualenv
    pytest-fixture-config
    pytest-xdist
    pytest-randomly
    sphinx
    tox
    virtualenv

[options.packages.find]
where = src

[isort]
profile = black
src_paths =
    setup.py
    src
    tests

[mypy]
strict = True
ignore_missing_imports = True
implicit_reexport = True
no_implicit_optional = True
show_error_codes = True

[tox:tox]
envlist = py310
isolated_build = True

[testenv:{test, typecheck}]
description =
    test: Run unit tests.
    typecheck: Run static type analysis.
changedir = {toxinidir}
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    PIP_CACHE
    PIP_TRUSTED_HOST
extras =
    dev
commands =
    test: pytest {posargs}
    typecheck: mypy {posargs:src}

[testenv:lint]
description = Lint the package.
skip_install = True
deps = pre-commit
passenv =
    TERM
commands =
    pre-commit run --all-files

[testenv:{clean,build}]
description =
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
# https://setuptools.pypa.io/en/latest/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository {env:TWINE_REPOSITORY:testpypi}} dist/*
